syntax = "proto3";

package aura.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/ondoprotocol/usdy-noble/x/aura/types";

service Msg {
  rpc Burn(aura.v1.MsgBurn) returns (aura.v1.MsgBurnResponse);
  rpc Mint(aura.v1.MsgMint) returns (aura.v1.MsgMintResponse);

  rpc Pause(aura.v1.MsgPause) returns (aura.v1.MsgPauseResponse);
  rpc Unpause(aura.v1.MsgUnpause) returns (aura.v1.MsgUnpauseResponse);

  rpc TransferOwnership(aura.v1.MsgTransferOwnership) returns (aura.v1.MsgTransferOwnershipResponse);
  rpc AcceptOwnership(aura.v1.MsgAcceptOwnership) returns (aura.v1.MsgAcceptOwnershipResponse);

  rpc AddBurner(aura.v1.MsgAddBurner) returns (aura.v1.MsgAddBurnerResponse);
  rpc RemoveBurner(aura.v1.MsgRemoveBurner) returns (aura.v1.MsgRemoveBurnerResponse);
  rpc SetBurnerAllowance(aura.v1.MsgSetBurnerAllowance) returns (aura.v1.MsgSetBurnerAllowanceResponse);

  rpc AddMinter(aura.v1.MsgAddMinter) returns (aura.v1.MsgAddMinterResponse);
  rpc RemoveMinter(aura.v1.MsgRemoveMinter) returns (aura.v1.MsgRemoveMinterResponse);
  rpc SetMinterAllowance(aura.v1.MsgSetMinterAllowance) returns (aura.v1.MsgSetMinterAllowanceResponse);

  rpc AddPauser(aura.v1.MsgAddPauser) returns (aura.v1.MsgAddPauserResponse);
  rpc RemovePauser(aura.v1.MsgRemovePauser) returns (aura.v1.MsgRemovePauserResponse);

  rpc AddBlockedChannel(aura.v1.MsgAddBlockedChannel) returns (aura.v1.MsgAddBlockedChannelResponse);
  rpc RemoveBlockedChannel(aura.v1.MsgRemoveBlockedChannel) returns (aura.v1.MsgRemoveBlockedChannelResponse);
}

//

message MsgBurn {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string from = 2;
  string amount = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgBurnResponse {}

message MsgMint {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string to = 2;
  string amount = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgMintResponse {}

message MsgPause {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
}

message MsgPauseResponse {}

message MsgUnpause {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
}

message MsgUnpauseResponse {}

message MsgTransferOwnership {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string new_owner = 2;
}

message MsgTransferOwnershipResponse {}

message MsgAcceptOwnership {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
}

message MsgAcceptOwnershipResponse {}

message MsgAddBurner {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string burner = 2;
  string allowance = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgAddBurnerResponse {}

message MsgRemoveBurner {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string burner = 2;
}

message MsgRemoveBurnerResponse {}

message MsgSetBurnerAllowance {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string burner = 2;
  string allowance = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgSetBurnerAllowanceResponse {}

message MsgAddMinter {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string minter = 2;
  string allowance = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgAddMinterResponse {}

message MsgRemoveMinter {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string minter = 2;
}

message MsgRemoveMinterResponse {}

message MsgSetMinterAllowance {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string minter = 2;
  string allowance = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

message MsgSetMinterAllowanceResponse {}

message MsgAddPauser {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string pauser = 2;
}

message MsgAddPauserResponse {}

message MsgRemovePauser {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string pauser = 2;
}

message MsgRemovePauserResponse {}

message MsgAddBlockedChannel {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string channel = 2;
}

message MsgAddBlockedChannelResponse {}

message MsgRemoveBlockedChannel {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string signer = 1;
  string channel = 2;
}

message MsgRemoveBlockedChannelResponse {}
