syntax = "proto3";

package aura.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/ondoprotocol/usdy-noble/x/aura/types";

// Paused is emitted whenever the module is paused.
message Paused {
  // account is the address of the account that paused the module.
  string account = 1;
}

// Unpaused is emitted whenever the module is unpaused.
message Unpaused {
  // account is the address of the account that unpaused the module.
  string account = 1;
}

// OwnershipTransferStarted is emitted whenever an ownership transfer is started.
message OwnershipTransferStarted {
  // previous_owner is the address of the previous owner.
  string previous_owner = 1;

  // new_owner is the address of the new owner.
  string new_owner = 2;
}

// OwnershipTransferStarted is emitted whenever an ownership transfer is finalized.
message OwnershipTransferred {
  // previous_owner is the address of the previous owner.
  string previous_owner = 1;

  // new_owner is the address of the new owner.
  string new_owner = 2;
}

// BurnerAdded is emitted whenever a new burner is added.
message BurnerAdded {
  // address is the address of the burner.
  string address = 1;

  // allowance is the allowance of the burner.
  string allowance = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

// BurnerRemoved is emitted whenever a burner is removed.
message BurnerRemoved {
  // address is the address of the burner.
  string address = 1;
}

// BurnerUpdated is emitted whenever a burner's allowance is set.
message BurnerUpdated {
  // address is the address of the burner.
  string address = 1;

  // previous_allowance is the previous allowance of the burner.
  string previous_allowance = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // new_allowance is the new allowance of the burner.
  string new_allowance = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

// MinterAdded is emitted whenever a new minter is added.
message MinterAdded {
  // address is the address of the minter.
  string address = 1;

  // allowance is the allowance of the minter.
  string allowance = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

// MinterRemoved is emitted whenever a minter is removed.
message MinterRemoved {
  // address is the address of the minter.
  string address = 1;
}

// MinterUpdated is emitted whenever a minter's allowance is set.
message MinterUpdated {
  // address is the address of the minter.
  string address = 1;

  // previous_allowance is the previous allowance of the minter.
  string previous_allowance = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // new_allowance is the new allowance of the minter.
  string new_allowance = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

// PauserAdded is emitted whenever a new pauser is added.
message PauserAdded {
  // address is the address of the pauser.
  string address = 1;
}

// PauserRemoved is emitted whenever a pauser is removed.
message PauserRemoved {
  // address is the address of the pauser.
  string address = 1;
}

// BlockedChannelAdded is emitted whenever a blocked channel is added.
message BlockedChannelAdded {
  // channel is the id of the blocked channel.
  string channel = 1;
}

// BlockedChannelRemoved is emitted whenever a blocked channel is removed.
message BlockedChannelRemoved {
  // channel is the id of the blocked channel.
  string channel = 1;
}
