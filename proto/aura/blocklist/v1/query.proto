syntax = "proto3";

package aura.blocklist.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";

option go_package = "github.com/ondoprotocol/usdy-noble/x/aura/types/blocklist";

service Query {
  rpc Owner(QueryOwner) returns (QueryOwnerResponse) {
    option (google.api.http).get = "/aura/blocklist/v1/owner";
  }

  rpc Addresses(QueryAddresses) returns (QueryAddressesResponse) {
    option (google.api.http).get = "/aura/blocklist/v1/addresses";
  }

  rpc Address(QueryAddress) returns (QueryAddressResponse) {
    option (google.api.http).get = "/aura/blocklist/v1/address/{address}";
  }
}

//

message QueryOwner {}

message QueryOwnerResponse {
  string owner = 1;
  string pending_owner = 2;
}

message QueryAddresses {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAddressesResponse {
  repeated string addresses = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAddress {
  string address = 1;
}

message QueryAddressResponse {
  bool blocked = 1;
}
